
@routes.route("/api/shoppingList/register", methods=["POST"])
def register():
    newListID = generateListID()
    # change first newListID to request.json["listTitle"]
    newList = ShoppingList(newListID, newListID)
    ListOfShopplinglists.append(newList)
    return {"listTitle": newList.title, "listID": newListID}


@routes.route("/api/allshoppinglists", methods= ["GET"])
def get_all_lists():
    if request.args.get("key") == SECRETKEY:
        listToReturn = []
        for l in ListOfShopplinglists:
            listToReturn.append(l.titleAndListIDtoJson())
        return json.dumps(listToReturn)
    else:
        return []

@routes.route("/api/shoppingList", methods=["GET"])
def get_Items():
    list = getListClass(request.args.get("listID"))
    return list.itemsListToJson()


@routes.route("/api/shoppingList", methods=["POST"])
def add_Item():
    #if not request.json or not 'title' in request.json:
     #   abort(404)
    list = getListClass(request.args.get("listID"))
    list.add_item(request.json["title"])
    return list.itemsListToJson()


@routes.route("/api/shoppingList/<int:item_id>", methods=["PUT"])
def update_Item(item_id):
    list = getListClass(request.args.get("listID"))

    list.update_by_id(
        str(item_id), request.json["title"], request.json["done"])
    return list.itemsListToJson()


@routes.route("/api/shoppingList/<int:item_id>", methods=["DELETE"])
def remove_Item(item_id):
    list = getListClass(request.args.get("listID"))
    print(item_id)
    list.remove_item_by_id(str(item_id))
    return list.itemsListToJson()
